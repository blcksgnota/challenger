name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    defaults:
      run:
        working-directory: ./challenger-ng

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install -g @angular/cli

      - run: npm install

      - run: npx ng lint

      - run: perl -pi -e 's/UNSPLASH_ACCESS_KEY/$ENV{UNSPLASH_ACCESS_KEY}/' ./src/environments/environment.prod.ts
        env:
          UNSPLASH_ACCESS_KEY: ${{ secrets.CHALLENGER_UNSPLASH_ACCESS_KEY }}

      - run: perl -pi -e 's/UNSPLASH_URL/$ENV{UNSPLASH_URL}/' ./src/environments/environment.prod.ts
        env:
          UNSPLASH_URL: https://api.unsplash.com

      - run: npx ng build --configuration=production --base-href /challenger/

#      - run: npx ng test --watch=false --browsers=ChromeHeadless

      - run: cp .nojekyll ./dist/challenger

      - name: Deploy to GitHub Pages
        uses:
          crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: ./challenger-ng/dist/challenger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to redstor.github.io
        uses:
          crazy-max/ghaction-github-pages@v3
        with:
          repo: redstor/redstor.github.io
          target_branch: gh-pages
          build_dir: ./challenger-ng/dist/challenger
        env:
          GH_PAT: ${{ secrets.CHALLENGER_DEPLOY_TOKEN }}
